plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id "jacoco"
}

apply from: "$rootDir/gradle/coverage.gradle"
apply from: "$rootDir/gradle/config.gradle"

android {
    namespace 'com.vlv.configuration.presentation'
    compileSdk config.compileSdk

    defaultConfig {
        minSdk config.minSdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        buildConfigField "boolean", "IS_COMPOSE", "false"
    }

    flavorDimensions += "uitool"
    productFlavors {
        create("compose") {
            dimension = "uitool"
            buildConfigField "boolean", "IS_COMPOSE", "true"
        }
        create("views") {
            dimension = "uitool"
            buildConfigField "boolean", "IS_COMPOSE", "false"
        }

    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.4.1"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation project(':feature:configuration:domain')
//    implementation project(':libraries:imperiya:core')
    implementation project(':data:network')
    implementation project(':data:database')
    implementation project(':libraries:bondsmith')
    implementation project(':tools:extensions')
    implementation project(':core:ui')
    testImplementation project(path: ':data:common')

    // Compose
    composeImplementation(platform(libs.androidx.compose.bom))
    composeImplementation(libs.androidx.compose.runtime)
    composeImplementation(libs.androidx.compose.material3)
    composeImplementation(libs.androidx.compose.activity)
    composeImplementation(libs.androidx.compose.material3)
    composeImplementation(libs.google.material)
    composeImplementation(libs.androidx.compose.livedata)
    composeImplementation(libs.androidx.compose.constraintlayout)
    composeImplementation(libs.androidx.compose.tooling.preview)
    composeImplementation(libs.koin.compose)
    composeImplementation(libs.imperiya) {
        artifact {
            classifier = "compose"
            type = "aar"
        }
    }


    debugImplementation(libs.tests.compose.ui.manifest)

    testImplementation project(':tools:test')
    androidTestImplementation project(':tools:test')
    androidTestImplementation project(':core:test')
}