plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
    id "jacoco"
}

apply from: "$rootDir/gradle/coverage.gradle"
apply from: "$rootDir/gradle/config.gradle"

android {
    namespace 'com.vlv.themoviedb'
    compileSdk config.compileSdk

    defaultConfig {
        applicationId "com.vlv.themoviedb"

        minSdk config.minSdk
        targetSdkVersion config.targetSdkVersion

        versionCode 2
        versionName "0.2"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        upload {
            storeFile file("$rootDir/distribution/key_store")
            storePassword "asdkljasldka"
            keyAlias "lkdajsldas"
            keyPassword "dljshadjahsk"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            debuggable false
        }
        debug {
            applicationIdSuffix ".debug"
            testCoverageEnabled true
            minifyEnabled false
        }
    }

    flavorDimensions += "uitool"
    productFlavors {
        create("compose") {
            dimension = "uitool"
            applicationIdSuffix = ".compose"
            versionNameSuffix = "-compose"
        }
        create("views") {
            dimension = "uitool"
            applicationIdSuffix = ".views"
            versionNameSuffix = "-views"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    packagingOptions {
        exclude 'META-INF/atomicfu.kotlin_module'
        exclude "**/attach_hotspot_windows.dll"
        exclude "META-INF/licenses/**"
        exclude "META-INF/AL2.0"
        exclude "META-INF/LGPL2.1"
    }

    testOptions {
        packagingOptions {
            jniLibs {
                useLegacyPackaging = true
            }
        }
    }
}

dependencies {

    implementation project(':libraries:imperiya:core')
    implementation project(':data:database')
    implementation project(':data:network')
    implementation project(':data:local')
    implementation project(':data:common')
    implementation project(':libraries:bondsmith')
    implementation project(':tools:extensions')
    implementation project(':feature:movie:presentation')
    implementation project(':feature:series:presentation')

    implementation project(':feature:people:presentation')
    implementation project(':feature:search:presentation')
    implementation project(':feature:favorite:presentation')
    implementation project(':feature:configuration:presentation')
    implementation project(':feature:genre:presentation')

    implementation project(':feature:configuration:domain')

    implementation project(':feature:movie:data')
    implementation project(':feature:series:data')

    implementation project(':core:ui')

    debugImplementation(libs.bigbrother.core)
    debugImplementation(libs.bigbrother.network)
    debugImplementation(libs.bigbrother.log)

    implementation(libs.androidx.core.ktx)
    implementation(libs.androidx.startup)
    implementation(libs.google.material)

    viewsImplementation(libs.shimmer)
    viewsImplementation(libs.pagerindicator)
    viewsImplementation(libs.tests.androidx.fragment.testing)
    viewsImplementation(libs.tests.androidx.test.core)

    testImplementation project(':tools:test')
    androidTestImplementation project(':tools:test')
    androidTestImplementation project(':feature:favorite:domain')
}